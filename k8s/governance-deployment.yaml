apiVersion: v1
kind: Namespace
metadata:
  name: governance
  labels:
    name: governance
    purpose: ai-governance
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: governance-architecture
  namespace: governance
  labels:
    app: governance-architecture
    pillar: "01"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: governance-architecture
  template:
    metadata:
      labels:
        app: governance-architecture
        pillar: "01"
    spec:
      containers:
      - name: governance-architecture
        image: aerofusionxr/governance-architecture:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: GOVERNANCE_CONFIG
          value: "/config/governance.yaml"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit-orchestrator
  namespace: governance
  labels:
    app: audit-orchestrator
    pillar: "02"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audit-orchestrator
  template:
    metadata:
      labels:
        app: audit-orchestrator
        pillar: "02"
    spec:
      containers:
      - name: audit-orchestrator
        image: aerofusionxr/audit-orchestrator:latest
        ports:
        - containerPort: 3002
        env:
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: safety-circuit-breaker
  namespace: governance
  labels:
    app: safety-circuit-breaker
    pillar: "03"
spec:
  replicas: 5  # High availability for safety-critical component
  selector:
    matchLabels:
      app: safety-circuit-breaker
  template:
    metadata:
      labels:
        app: safety-circuit-breaker
        pillar: "03"
    spec:
      containers:
      - name: safety-circuit-breaker
        image: aerofusionxr/safety-circuit-breaker:latest
        ports:
        - containerPort: 3003
        env:
        - name: NODE_ENV
          value: "production"
        - name: CIRCUIT_BREAKER_THRESHOLD
          value: "0.95"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 3003
          initialDelaySeconds: 2
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: governance-architecture-service
  namespace: governance
spec:
  selector:
    app: governance-architecture
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3001
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: audit-orchestrator-service
  namespace: governance
spec:
  selector:
    app: audit-orchestrator
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3002
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: safety-circuit-breaker-service
  namespace: governance
spec:
  selector:
    app: safety-circuit-breaker
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3003
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: governance-ingress
  namespace: governance
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - governance.aerofusionxr.com
    secretName: governance-tls
  rules:
  - host: governance.aerofusionxr.com
    http:
      paths:
      - path: /architecture
        pathType: Prefix
        backend:
          service:
            name: governance-architecture-service
            port:
              number: 80
      - path: /audit
        pathType: Prefix
        backend:
          service:
            name: audit-orchestrator-service
            port:
              number: 80
      - path: /safety
        pathType: Prefix
        backend:
          service:
            name: safety-circuit-breaker-service
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: governance-config
  namespace: governance
data:
  governance.yaml: |
    governance:
      version: "1.0.0"
      maturity_level: 5
      pillars:
        pillar_01_governance_architecture:
          enabled: true
          priority: "critical"
        pillar_02_independent_assurance:
          enabled: true
          priority: "critical"
        pillar_03_runtime_safety:
          enabled: true
          priority: "critical"
      monitoring:
        metrics_collection_interval: 60
        alert_thresholds:
          availability: 0.9997
          error_rate: 0.0003
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: governance-pdb
  namespace: governance
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: governance-architecture
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: safety-pdb
  namespace: governance
spec:
  minAvailable: 3
  selector:
    matchLabels:
      app: safety-circuit-breaker 