apiVersion: apps/v1
kind: Deployment
metadata:
  name: baggage-tracker
  labels:
    app: baggage-tracker
spec:
  replicas: 3
  selector:
    matchLabels:
      app: baggage-tracker
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: baggage-tracker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: baggage-tracker
        image: aerofusion/baggage-tracker:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['version']
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: baggage-tracker-secrets
              key: redis-url
        - name: MQTT_URL
          valueFrom:
            secretKeyRef:
              name: baggage-tracker-secrets
              key: mqtt-url
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector:4317"
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: baggage-tracker
  labels:
    app: baggage-tracker
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: baggage-tracker
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: baggage-tracker
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: baggage.aerofusion.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: baggage-tracker
            port:
              name: http
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: baggage-tracker
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: baggage-tracker
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
---
apiVersion: v1
kind: Secret
metadata:
  name: baggage-tracker-secrets
type: Opaque
data:
  redis-url: cmVkaXM6Ly9yZWRpcy1tYXN0ZXI6NjM3OQ== # redis://redis-master:6379
  mqtt-url: bXF0dDovL21vc3F1aXR0bzoxODgz # mqtt://mosquitto:1883 